doctype html
html
  head
    title Finance
    meta(name='viewport', content='user-scalable=no, width=device-width, initial-scale=1.0, maximum-scale=1.0')
    meta(name='mobile-web-app-capable', content='yes')
    meta(name='apple-mobile-web-app-capable', content='yes')
    
    style
      :stylus
        .flex-container
          display flex
          flex-flow row wrap
      
        form
          &:valid fieldset
            border-color lime
            
          label
            margin 3px 0
            
            display block
            text-align right
            
            input
              width 70%
              margin-left 5px
              
          button
            display block
            margin-left auto
        
        #dbdump
          
          .del
            color red
            font-weight bold
            cursor pointer
            &::before
              content " X"
  body
    script(src='pouchdb/pouchdb.min.js')
    script(src='jquery/jquery.min.js')
    script(src='underscore/underscore.js')
    script(src='mercury/mercury.js')
    
    script
      :livescript
        {h} = hg = mercury
        log = console~log
        local-db = new PouchDB \finance
        
        gv = -> $ it .val!
        
        acct-add = (s, d) ->
          local-db.put {
            # TODO: decouple name from identity?
            _id: "acct-#{d.name}"
          }
          
        xact-add = (s, d) ->
          postDate = createDate = Date.now!
          local-db.put {
            _id: "xact-#postDate"
            createDate
            status: \verified
            offsets:
              * acct: (d.ct-from), amt: -100*(gv \#ct-amt)
              * acct: (d.ct-to), amt: 100*(gv \#ct-amt)
          }
          
        doc-del = (s, d) ->
          local-db.remove d .catch log
          # optimistically update local state?
        
        db-array = (opts = {}) ->
          # TODO: avoid mutating opts?
          # TODO: apparently varhash is favored over arr?
          arr =  hg.array []
          
          if opts.startkey? and not opts.endkey?
            c = (opts.startkey.slice -1 .charCodeAt 0) + 1 |> String.fromCharCode
            opts.endkey = (opts.startkey.slice 0 -1) + c
            opts.inclusive_end = false
          
          # TODO: do we use struct or value?
          init-query = opts with { +include_docs }
          local-db.allDocs init-query
          .catch log
          .then (res) ->
            arr.set res.rows.map -> hg.struct it.doc
          
          # is there overhead in having multiple local change feeds?
          if opts.startkey?
            # TODO: account for +inclusive_end
            opts.filter = -> opts.startkey <= it._id < opts.endkey
          
          change-query = opts with { +live, +include_docs, since: \now }
          
          local-db.changes change-query
          .on \change (c) ->
            var ind
            arr.some (d, i) ->
              if d._id == c.id
                ind := i
            if c.deleted
              arr.splice ind, 1
            else if ind?
              arr.put ind, hg.struct c.doc
            else
              # insert in order?
              arr.push c.doc
          
          arr
        
        app-state = hg.state {
          dump-state: db-array!
          channels: {
            acct-add
            xact-add
            doc-del
          }
        }
        
        lbl = (n, c, a) -> h \label [n, (h c, a)]
        
        var forms
        hg.app(
          $ \body .0
          app-state,
          (s) ->
            chs = s.channels
            forms ?:= [
            * h \form {
                \ev-submit : hg.sendSubmit chs.acct-add
              }, h \fieldset [
                h \legend 'Create Account'
                lbl 'Name' \input { name: \name, +required }
                h \button 'Create'
              ]
            * h \form {
                \ev-submit : hg.sendSubmit chs.xact-add
              }, h \fieldset [
                h \legend 'Create transaction'
                lbl 'From' \input { name: \from, +required, attributes: list: 'accts' }
                lbl 'To' \input { name: \to, +required, attributes: list: 'accts' }
                lbl 'Amount' \input { name: \amt, type: \number, +required }
                h \button 'Create'
              ]
            ]
            
            h \div [
            * h \.flex-container [
              * forms
              * h \form [
                  h \datalist#accts [
                    h \option {value: 'Cash'}
                    h \option {value: 'Savings'}
                  ]
                ]
              ]
            * h \pre#dbdump (s.dump-state.map ->
                h \div [
                  (JSON.stringify it, null 2),
                  h \span.del 'ev-click': hg.send chs.doc-del, it
                ])
            ]
        )
        